{"ast":null,"code":"var _jsxFileName = \"/Users/rociorios/Desktop/DaPortfolio/src/components/Contacts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport emailjs from \"emailjs-com\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Contacts = () => {\n  _s();\n\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const serviceID = \"service_ID\";\n  const templateID = \"template_ID\";\n  const userID = \"user_8FLqdeLJXQM67fje6JxaQ\";\n\n  const onSubmit = (data, r) => {\n    sendEmail(serviceID, templateID, {\n      name: data.name,\n      phone: data.phone,\n      email: data.email,\n      subject: data.subject,\n      description: data.description\n    }, userID);\n    r.target.reset();\n  };\n\n  const sendEmail = (serviceID, templateID, variables, userID) => {\n    emailjs.send(serviceID, templateID, variables, userID).then(() => {\n      setSuccessMessage(\"Form sent successfully! I'll contact you as soon as possible.\");\n    }).catch(err => console.error(`Something went wrong ${err}`));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contacts\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"contact me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please fill out the form and describe you project needs and I'll contact you as soon as possible.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"success-message\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 col-xs-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                placeholder: \"Name\",\n                name: \"name\",\n                ...register(\"message\", {\n                  required: \"Please enter your name\",\n                  maxLength: {\n                    value: 20\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"line\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), errors.name && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-message\",\n              children: \"Please enter a name with fewer than 20 characters\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                placeholder: \"Phone Number\",\n                name: \"phone\",\n                ...register({\n                  required: true\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"line\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), errors.phone && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-message\",\n              children: \"Invalid phone number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 34\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                className: \"form-control\",\n                placeholder: \"Email\",\n                name: \"email\",\n                ...register({\n                  required: true,\n                  pattern: {\n                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"line\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-message\",\n              children: \"Invalid Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 34\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                placeholder: \"Subject\",\n                name: \"subject\",\n                ...register({\n                  required: true\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"line\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), errors.subject && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-message\",\n              children: \"OOPS, Don't you forget to add the subject.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 36\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 col-xs-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                type: \"text\",\n                className: \"form-control\",\n                placeholder: \"Please describe shortly you project...\",\n                name: \"description\",\n                ...register({\n                  required: true\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"line\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), errors.description && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-message\",\n              children: \" Please describe shortly your project needs... \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 40\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-main-offer contact-btn\",\n              type: \"submit\",\n              children: \"contact me\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Contacts, \"Vokh9WwEnN3bUjMz2pi/Ej321sc=\", false, function () {\n  return [useForm];\n});\n\n_c = Contacts;\nexport default Contacts; // import React, { useState } from \"react\";\n// import emailjs from \"emailjs-com\";\n// import { useForm } from \"react-hook-form\";\n// const Contacts = () => {\n//     const [successMessage, setSuccessMessage] = useState(\"\");\n//     const { register, handleSubmit, errors} = useForm();\n//     const serviceID = \"service_ID\";\n//     const templateID = \"template_ID\";\n//     const userID = \"user_8FLqdeLJXQM67fje6JxaQ\";\n//     const onSubmit = (data, r) => {\n//         sendEmail(\n//             serviceID, \n//             templateID, \n//             { \n//                 name: data.name,\n//                 phone: data.phone,\n//                 email: data.email,\n//                 subject: data.subject,\n//                 description: data.description\n//             }, \n//             userID\n//         )\n//         r.target.reset();\n//     }\n//     const sendEmail = (serviceID, templateID, variables, userID) => {\n//         emailjs.send(serviceID, templateID, variables, userID )\n//           .then(() => {\n//             setSuccessMessage(\"Form sent successfully! I'll contact you as soon as possible.\");\n//           }).catch(err => console.error(`Something went wrong ${err}`));\n//       }\n//     return (\n//         <div className=\"contacts\">\n//             <div className=\"text-center\">\n//             <h1>Contact Me</h1>\n//             <p>Please fill out the form below and describe your proyect needs and I'll constact you soon as posible.</p>\n//             <span className=\"success-message\">{successMessage}</span>\n//             </div>\n//             <div className=\"container\">\n//                 <form onSubmit={handleSubmit(onSubmit)}>\n//                 <div className=\"row\">\n//                    <div className=\"col-md-6 col-xm-12\">\n//                        {/* NAME INPUT */}\n//                        <div className=\"text-center\">\n//                        <input \n//                        className=\"form-control\"\n//                        type=\"text\"\n//                        placeholder=\"Name\" \n//                        name=\"name\"\n//                        ref={\n//                         register({\n//                           required: \"Please enter your name\",\n//                           maxLength: {\n//                             value: 20,\n//                             message: \"Please enter a name with fewer than 20 characters\"\n//                           }\n//                         })\n//                       }\n//                        />\n//                        <div className=\"line\"></div>\n//                        </div>\n//                        <span className=\"error-message\">\n//                            {errors.name && errors.name.message}\n//                        </span>\n//                        {/* PHONE INPUT */}\n//                        <div className=\"text-center\">\n//                        <input \n//                        className=\"form-control\"\n//                        type=\"text\"\n//                        placeholder=\"Phone Number\" \n//                        name=\"phone\"\n//                        ref={\n//                         register({\n//                           required: \"Please add your phone number\",\n//                         })\n//                       }\n//                        />\n//                        <div className=\"line\"></div>\n//                        </div>\n//                        <span className=\"error-message\">\n//                         {errors.phone && errors.phone.message}\n//                        </span>\n//                        {/* EMAIL INPUTS */}\n//                        <div className=\"text-center\">\n//                        <input \n//                        className=\"form-control\"\n//                        type=\"text\"\n//                        placeholder=\"Email\" \n//                        name=\"email\"\n//                        ref={\n//                         register({\n//                           required: \"Please provide you email\",\n//                           pattern: {\n//                             value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n//                             message: \"invalid Email\"\n//                           }\n//                         })\n//                       }\n//                        />\n//                        <div className=\"line\"></div>\n//                        </div>\n//                        <span className=\"error-message\">\n//                        {errors.email && errors.email.message}\n//                        </span>\n//                        {/* SUBJECT INPUT */}\n//                        <div className=\"text-center\">\n//                        <input \n//                        className=\"form-control\"\n//                        type=\"text\"\n//                        placeholder=\"Subject\" \n//                        name=\"subject\"\n//                        ref={\n//                         register({\n//                           required: \"OOPS, you forget to add the subject.\",\n//                         })\n//                       }\n//                        />\n//                        <div className=\"line\"></div>\n//                        </div>\n//                        <span className=\"error-message\">\n//                         {errors.subject && errors.subject.message}\n//                        </span>\n//                     </div>\n//                     <div className=\"col-md-6 col-xs-12\">\n//                         {/* DESCRIPTION */}\n//                        <div className=\"text-center\">\n//                        <textarea \n//                        className=\"form-control\"\n//                        type=\"text\"\n//                        placeholder=\"Please describe shortly your project\" \n//                        name=\"description\"\n//                        ref={\n//                         register({\n//                           required: \"Please describe shortly your project needs...\",\n//                         })\n//                       }\n//                        ></textarea>\n//                        <div className=\"line\"></div>\n//                        </div>\n//                        <span className=\"error-message\">\n//                         {errors.description && errors.description.message}\n//                        </span>\n//                        <button className=\"btn-main-offer contact-btn\" type=\"submit\">Contact Me</button>\n//                     </div>\n//                 </div>\n//               </form>\n//            </div>\n//         </div>\n//     )\n// }\n// export default Contacts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"sources":["/Users/rociorios/Desktop/DaPortfolio/src/components/Contacts.js"],"names":["React","useState","emailjs","useForm","Contacts","successMessage","setSuccessMessage","register","handleSubmit","formState","errors","serviceID","templateID","userID","onSubmit","data","r","sendEmail","name","phone","email","subject","description","target","reset","variables","send","then","catch","err","console","error","required","maxLength","value","pattern"],"mappings":"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":["\nimport React, { useState } from \"react\";\nimport emailjs from \"emailjs-com\";\nimport { useForm } from \"react-hook-form\";\n\nconst Contacts = () => {\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const { register, handleSubmit, formState:{ errors }} = useForm();\n\n  const serviceID = \"service_ID\";\n  const templateID = \"template_ID\";\n  const userID = \"user_8FLqdeLJXQM67fje6JxaQ\";\n\n  const onSubmit = (data, r) => { \n\n    sendEmail(\n      serviceID,\n      templateID,\n      {\n        name: data.name,\n        phone: data.phone,\n        email: data.email,\n        subject: data.subject,\n        description: data.description\n      },\n      userID\n    )\n    r.target.reset();\n  }\n\n  const sendEmail = (serviceID, templateID, variables, userID) => {\n    emailjs.send(serviceID, templateID, variables, userID)\n      .then(() => {\n        setSuccessMessage(\"Form sent successfully! I'll contact you as soon as possible.\");\n      }).catch(err => console.error(`Something went wrong ${err}`));\n  }\n\n  return (\n    <div className=\"contacts\">\n      <div className=\"text-center\">\n        <h1>contact me</h1>\n        <p>Please fill out the form and describe you project needs and I'll contact you as soon as possible.</p>\n        <span className=\"success-message\">{successMessage}</span>\n      </div>\n      <div className=\"container\">\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"row\">\n            <div className=\"col-md-6 col-xs-12\">\n              {/* NAME INPUT */}\n              <div className=\"text-center\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Name\"\n                  name=\"name\"\n                  {...register\n                    (\"message\",{\n                    required: \"Please enter your name\",\n                    maxLength: \n                        {\n                        value: 20\n                        }\n                    })\n                  }\n                />\n                <div className=\"line\"></div>\n              </div>\n             \n                {errors.name && <span className=\"error-message\">Please enter a name with fewer than 20 characters</span>}\n             \n              {/* PHONE INPUT */}\n              <div className=\"text-center\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Phone Number\"\n                  name=\"phone\"\n                  {...register({\n                      required: true\n                    })\n                  }\n                />\n                <div className=\"line\"></div>\n              </div>\n              \n                {errors.phone && <span className=\"error-message\">Invalid phone number</span>}\n              \n              {/* EMAIL INPUT */}\n              <div className=\"text-center\">\n                <input\n                  type=\"email\"\n                  className=\"form-control\"\n                  placeholder=\"Email\"\n                  name=\"email\"\n                  {...register({\n                      required: true,\n                      pattern: {\n                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i\n                      }\n                    })\n                  }\n                />\n                <div className=\"line\"></div>\n              </div>\n              \n                {errors.email && <span className=\"error-message\">Invalid Email</span>}\n             \n              {/* SUBJECT INPUT */}\n              <div className=\"text-center\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Subject\"\n                  name=\"subject\"\n                  {...register({\n                      required: true\n                    })\n                  }\n                />\n                <div className=\"line\"></div>\n              </div>\n              \n                {errors.subject && <span className=\"error-message\">OOPS, Don't you forget to add the subject.</span>}\n              \n            </div>\n            <div className=\"col-md-6 col-xs-12\">\n              {/* DESCRIPTION */}\n              <div className=\"text-center\">\n                <textarea\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Please describe shortly you project...\"\n                  name=\"description\"\n                  {...register({\n                      required: true\n                    })\n                  }\n                ></textarea>\n                <div className=\"line\"></div>\n              </div>\n              \n                {errors.description && <span className=\"error-message\"> Please describe shortly your project needs... </span>}\n            \n              <button className=\"btn-main-offer contact-btn\" type=\"submit\">contact me</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default Contacts;\n\n\n\n\n\n// import React, { useState } from \"react\";\n// import emailjs from \"emailjs-com\";\n// import { useForm } from \"react-hook-form\";\n\n// const Contacts = () => {\n//     const [successMessage, setSuccessMessage] = useState(\"\");\n//     const { register, handleSubmit, errors} = useForm();\n     \n//     const serviceID = \"service_ID\";\n//     const templateID = \"template_ID\";\n//     const userID = \"user_8FLqdeLJXQM67fje6JxaQ\";\n\n//     const onSubmit = (data, r) => {\n//         sendEmail(\n//             serviceID, \n//             templateID, \n//             { \n//                 name: data.name,\n//                 phone: data.phone,\n//                 email: data.email,\n//                 subject: data.subject,\n//                 description: data.description\n//             }, \n//             userID\n//         )\n//         r.target.reset();\n//     }\n\n//     const sendEmail = (serviceID, templateID, variables, userID) => {\n//         emailjs.send(serviceID, templateID, variables, userID )\n//           .then(() => {\n//             setSuccessMessage(\"Form sent successfully! I'll contact you as soon as possible.\");\n//           }).catch(err => console.error(`Something went wrong ${err}`));\n//       }\n\n//     return (\n//         <div className=\"contacts\">\n//             <div className=\"text-center\">\n//             <h1>Contact Me</h1>\n//             <p>Please fill out the form below and describe your proyect needs and I'll constact you soon as posible.</p>\n//             <span className=\"success-message\">{successMessage}</span>\n//             </div>\n//             <div className=\"container\">\n//                 <form onSubmit={handleSubmit(onSubmit)}>\n//                 <div className=\"row\">\n//                    <div className=\"col-md-6 col-xm-12\">\n//                        {/* NAME INPUT */}\n//                        <div className=\"text-center\">\n//                        <input \n//                        className=\"form-control\"\n//                        type=\"text\"\n//                        placeholder=\"Name\" \n//                        name=\"name\"\n//                        ref={\n//                         register({\n//                           required: \"Please enter your name\",\n//                           maxLength: {\n//                             value: 20,\n//                             message: \"Please enter a name with fewer than 20 characters\"\n//                           }\n//                         })\n//                       }\n//                        />\n//                        <div className=\"line\"></div>\n//                        </div>\n//                        <span className=\"error-message\">\n//                            {errors.name && errors.name.message}\n//                        </span>\n//                        {/* PHONE INPUT */}\n//                        <div className=\"text-center\">\n//                        <input \n//                        className=\"form-control\"\n//                        type=\"text\"\n//                        placeholder=\"Phone Number\" \n//                        name=\"phone\"\n//                        ref={\n//                         register({\n//                           required: \"Please add your phone number\",\n//                         })\n//                       }\n//                        />\n//                        <div className=\"line\"></div>\n//                        </div>\n//                        <span className=\"error-message\">\n//                         {errors.phone && errors.phone.message}\n//                        </span>\n//                        {/* EMAIL INPUTS */}\n//                        <div className=\"text-center\">\n//                        <input \n//                        className=\"form-control\"\n//                        type=\"text\"\n//                        placeholder=\"Email\" \n//                        name=\"email\"\n//                        ref={\n//                         register({\n//                           required: \"Please provide you email\",\n//                           pattern: {\n//                             value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n//                             message: \"invalid Email\"\n//                           }\n//                         })\n//                       }\n//                        />\n//                        <div className=\"line\"></div>\n//                        </div>\n//                        <span className=\"error-message\">\n//                        {errors.email && errors.email.message}\n//                        </span>\n//                        {/* SUBJECT INPUT */}\n//                        <div className=\"text-center\">\n//                        <input \n//                        className=\"form-control\"\n//                        type=\"text\"\n//                        placeholder=\"Subject\" \n//                        name=\"subject\"\n//                        ref={\n//                         register({\n//                           required: \"OOPS, you forget to add the subject.\",\n//                         })\n//                       }\n//                        />\n//                        <div className=\"line\"></div>\n//                        </div>\n//                        <span className=\"error-message\">\n//                         {errors.subject && errors.subject.message}\n//                        </span>\n//                     </div>\n//                     <div className=\"col-md-6 col-xs-12\">\n//                         {/* DESCRIPTION */}\n//                        <div className=\"text-center\">\n//                        <textarea \n//                        className=\"form-control\"\n//                        type=\"text\"\n//                        placeholder=\"Please describe shortly your project\" \n//                        name=\"description\"\n//                        ref={\n//                         register({\n//                           required: \"Please describe shortly your project needs...\",\n//                         })\n//                       }\n//                        ></textarea>\n//                        <div className=\"line\"></div>\n//                        </div>\n//                        <span className=\"error-message\">\n//                         {errors.description && errors.description.message}\n//                        </span>\n//                        <button className=\"btn-main-offer contact-btn\" type=\"submit\">Contact Me</button>\n//                     </div>\n//                 </div>\n//               </form>\n//            </div>\n//         </div>\n//     )\n// }\n\n// export default Contacts;\n"]},"metadata":{},"sourceType":"module"}